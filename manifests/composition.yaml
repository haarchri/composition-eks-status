apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  labels:
    devops.company.systems/provider: aws-helm
    devops.company.systems/purpose: ck8s
  name: ck8s
spec:
  compositeTypeRef:
    apiVersion: ck8s.crossplane.io/v1alpha1
    kind: test
  resources:
    - name: eks-security-group
      base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: SecurityGroup
        metadata:
          name: eks-crossplane-sg
        spec:
          forProvider:
            description: "EKS Crossplane security Group"
            groupName: eks-crossplane-sg
            egress:
              - ipProtocol: "-1"
                ipRanges:
                - cidrIp: 0.0.0.0/0
            ingress:
              - fromPort: 443
                toPort: 443
                ipProtocol: tcp
                ipRanges:
                  - cidrIp: 10.0.0.0/8
      patches:
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.securityGroupID
          toFieldPath: status.eks.securityGroupID
          policy:
            fromFieldPath: Optional
        - fromFieldPath: spec.parameters.vpcId
          toFieldPath: spec.forProvider.vpcId
        - fromFieldPath: spec.parameters.location
          toFieldPath: spec.forProvider.region

    - name: RoleRoleControlPlane
      base:
        apiVersion: iam.aws.crossplane.io/v1beta1
        kind: Role
        metadata:
          labels:
            role: controlplane
        spec:
          forProvider:
            assumeRolePolicyDocument: |
              {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": [
                                "eks.amazonaws.com"
                            ]
                        },
                        "Action": [
                            "sts:AssumeRole"
                        ]
                    }
                ]
              }
    - name: RolePolicyAttachmentControlPlane
      base:
        apiVersion: iam.aws.crossplane.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          forProvider:
            policyArn: arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
            roleNameSelector:
              matchControllerRef: true
              matchLabels:
                role: controlplane

    - name: crossplane-eks
      base:
        apiVersion: eks.aws.crossplane.io/v1beta1
        kind: Cluster
        spec:
          forProvider:
              roleArnSelector:
                matchControllerRef: true
                matchLabels:
                  role: controlplane
              resourcesVpcConfig:
                endpointPrivateAccess: true
                endpointPublicAccess: false
                subnetIds:
                  - subnet-042389ded8f44910d
                  - subnet-04767a3faf36c26d5
          writeConnectionSecretToRef:
            namespace: crossplane-system
            name: eksinfo
      patches:
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.arn
          toFieldPath: status.eks.clusterarn
          policy:
            fromFieldPath: Optional
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.platformVersion
          toFieldPath: status.eks.platformversion
          policy:
            fromFieldPath: Optional
        - fromFieldPath: spec.parameters.location
          toFieldPath: spec.forProvider.region
        - fromFieldPath: spec.parameters.version
          toFieldPath: spec.forProvider.version

    - name: RoleNodeGroup
      base:
        apiVersion: iam.aws.crossplane.io/v1beta1
        kind: Role
        metadata:
          labels:
            role: nodegroup
        spec:
          forProvider:
            assumeRolePolicyDocument: |
              {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": [
                                "ec2.amazonaws.com"
                            ]
                        },
                        "Action": [
                            "sts:AssumeRole"
                        ]
                    }
                ]
              }

    - name: IAMRolePolicyAttachmentAmazonEKSWorkerNodePolicy
      base:
        apiVersion: iam.aws.crossplane.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          forProvider:
            policyArn: arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
            roleNameSelector:
              matchControllerRef: true
              matchLabels:
                role: nodegroup

    - name: IAMRolePolicyAttachmentAmazonEKSCNIPolicy
      base:
        apiVersion: iam.aws.crossplane.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          forProvider:
            policyArn: arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
            roleNameSelector:
              matchControllerRef: true
              matchLabels:
                role: nodegroup

    - name: IAMRolePolicyAttachmentAmazonEC2ContainerRegistryReadOnly         
      base:
        apiVersion: iam.aws.crossplane.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          forProvider:
            policyArn: arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
            roleNameSelector:
              matchControllerRef: true
              matchLabels:
                role: nodegroup

    - name: eks-nodegroup
      base:
        apiVersion: eks.aws.crossplane.io/v1alpha1
        kind: NodeGroup
        spec:
          forProvider:
            logging:
              clusterLogging:
                enabled: true
                types:
                  - api
                  - audit
                  - authenticator
                  - controllerManager
                  - scheduler
            instanceTypes:
              - t3.tiny
            subnets:
              - subnet-042389ded8f44910d
              - subnet-04767a3faf36c26d5
            scalingConfig:
              minSize: 1
            clusterNameSelector:
              matchControllerRef: true
            nodeRoleSelector:
              matchControllerRef: true
              matchLabels:
                role: nodegroup
      patches:
        - fromFieldPath: status.eks.platformversion
          toFieldPath: spec.forProvider.version
          policy:
            fromFieldPath: Required
        - fromFieldPath: spec.parameters.location
          toFieldPath: spec.forProvider.region
        - fromFieldPath: spec.parameters.min
          toFieldPath: spec.forProvider.scalingConfig.desiredSize
        - fromFieldPath: spec.parameters.max
          toFieldPath: spec.forProvider.scalingConfig.maxSize
